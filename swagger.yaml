openapi: 3.0.0
info:
  title: Turbine API
  description: API documentation for the Turbine backend.
  version: 1.0.0
servers:
  - url: https://xyxhy4n2o4.execute-api.us-east-2.amazonaws.com
    description: Production server

paths:
  /users:
    get:
      summary: Get user details
      description: Retrieve details for multiple users by their IDs.
      parameters:
        - name: ids
          in: query
          required: true
          description: Comma-separated list of user IDs.
          schema:
            type: string
      responses:
        '200':
          description: A list of user details.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    userId:
                      type: string
                      description: The unique ID of the user.
                    name:
                      type: string
                      description: The name of the user.
                    wishList:
                      type: array
                      items:
                        type: string
                      description: List of items in the user's wishlist.

  /users/{userId}/games:
    get:
      summary: Get games for a user
      description: Retrieve games associated with a specific user.
      parameters:
        - name: userId
          in: path
          required: true
          description: The ID of the user.
          schema:
            type: string
        - name: FW
          in: query
          required: true
          description: From where (context) the request is made.
          schema:
            type: string
      responses:
        '200':
          description: A list of games for the user.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  properties:
                    gameName:
                      type: string
                      description: The name of the game.
                    img:
                      type: string
                      description: The URL of the game's image.

  /games/{gameId}:
    get:
      summary: Get game details
      description: Retrieve details for a specific game.
      parameters:
        - name: gameId
          in: path
          required: true
          description: The ID of the game.
          schema:
            type: string
      responses:
        '200':
          description: Details of the game.
          content:
            application/json:
              schema:
                type: object
                properties:
                  gameName:
                    type: string
                    description: The name of the game.
                  rating:
                    type: number
                    format: float
                    description: The rating of the game.
                  tags:
                    type: array
                    items:
                      type: string
                    description: Tags associated with the game.
                  playerCount:
                    type: integer
                    description: The number of players.
                  playTime:
                    type: string
                    description: The average playtime.
                  img:
                    type: string
                    description: The URL of the game's image.

  /guilds/{guildId}:
    get:
      summary: Get guild details
      description: Retrieve details for a specific guild.
      parameters:
        - name: guildId
          in: path
          required: true
          description: The ID of the guild.
          schema:
            type: string
      responses:
        '200':
          description: Details of the guild.
          content:
            application/json:
              schema:
                type: object
                properties:
                  guildId:
                    type: string
                    description: The ID of the guild.
                  guildName:
                    type: string
                    description: The name of the guild.
                  img:
                    type: string
                    description: The URL of the guild's image.
                  members:
                    type: array
                    items:
                      type: string
                    description: List of user IDs in the guild.
                  log:
                    type: string
                    description: The activity log of the guild.

    put:
      summary: Update guild details
      description: Update the details of a specific guild.
      parameters:
        - name: guildId
          in: path
          required: true
          description: The ID of the guild.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                guildName:
                  type: string
                  description: The new name of the guild.
                img:
                  type: string
                  description: The new image URL of the guild.
      responses:
        '200':
          description: The updated guild details.

  /guilds/{guildId}/members:
    post:
      summary: Add a guild member
      description: Add a new member to a guild.
      parameters:
        - name: guildId
          in: path
          required: true
          description: The ID of the guild.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: The ID of the user to add.
                role:
                  type: string
                  description: The role of the user in the guild.
      responses:
        '200':
          description: Member added successfully.

  /session:
    post:
      summary: Create a session
      description: Create a new session with games and users.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                gameIds:
                  type: array
                  items:
                    type: string
                  description: List of game IDs.
                userIds:
                  type: array
                  items:
                    type: string
                  description: List of user IDs.
      responses:
        '200':
          description: Session created successfully.

  /sessions/{sessionId}:
    get:
      summary: Get session details
      description: Retrieve details for a specific session.
      parameters:
        - name: sessionId
          in: path
          required: true
          description: The ID of the session.
          schema:
            type: string
      responses:
        '200':
          description: Details of the session.
          content:
            application/json:
              schema:
                type: object
                properties:
                  gameIds:
                    type: array
                    items:
                      type: string
                    description: List of game IDs in the session.
                  userIds:
                    type: array
                    items:
                      type: string
                    description: List of user IDs in the session.

    delete:
      summary: Delete a session
      description: Delete a specific session.
      parameters:
        - name: sessionId
          in: path
          required: true
          description: The ID of the session.
          schema:
            type: string
      responses:
        '200':
          description: Session deleted successfully.

  /sessions/{sessionId}/votes:
    get:
      summary: Vote for a game in a session
      description: Increase the vote count for a game in a session.
      parameters:
        - name: sessionId
          in: path
          required: true
          description: The ID of the session.
          schema:
            type: string
        - name: gameId
          in: query
          required: true
          description: The ID of the game to vote for.
          schema:
            type: string
      responses:
        '200':
          description: Vote registered successfully.