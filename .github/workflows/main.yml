name: Deploy Static Files to S3

on:
  push:
    branches:
      - deployment  # Trigger workflow on push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    steps:
      # Checkout the repository code
      - name: ‚úÖ Checkout Code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js (adjust the version as necessary)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Adjust the Node.js version as necessary

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          cd Turbine
          npm install
          npm install -g @expo/cli
          npm install expo
          npm install web-streams-polyfill

      - name: create web app files
        run: |
          cd Turbine
          npx expo export --platform web

      # - name: Create bucket if it doesn't exist
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_DEFAULT_REGION: us-east-2
      #   run: |
      #     if ! aws s3api head-bucket --bucket ${{ secrets.AWS_S3_BUCKET }} --region us-east-1; then
      #       echo "Bucket does not exist, creating bucket..."
      #       aws s3api create-bucket --bucket ${{ secrets.AWS_S3_BUCKET }} --region us-east-1
      #     else
      #       echo "Bucket already exists."
      #     fi

      # Deploy static files to S3 bucket
      # Deploy static files to S3 bucket without ACL
      - name: Deploy to S3 bucket
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-2
        run: |
          aws s3 sync Turbine/dist s3://${{ secrets.AWS_S3_BUCKET }} --delete

      # Set up Python environment
      - name: üêç Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'  # Adjust based on the version you need

      - name: Zip Lambda Function
        run: |
          zip -j lambda.zip Backend/lambda_function.py

      - name: Install dependencies and zip Lambda
        run: |
          mkdir -p package
          pip install -r requirements.txt -t package/
          cp Backend/lambda_function.py package/
          cd package && zip -r ../lambda.zip .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Deploy to AWS Lambda
        run: |
          aws lambda update-function-code \
            --function-name turbine_lambda \
            --zip-file fileb://lambda.zip